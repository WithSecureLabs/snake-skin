export async function send({method, url, data, raw, auth, scheme, fetch}) {
  if (!(fetch instanceof Function)) {
    fetch = process.browser ? window.fetch : (await import('node-fetch')).default;
  }

  const opts = {method, headers: {}};

  if (raw) {
    opts.body = raw;
  } else if (data) {
    opts.headers['Content-Type'] = 'application/json';
    opts.body = JSON.stringify(data);
  }

  if (auth) {
    if (scheme) {
      opts.headers['Authorization'] = `${scheme} ${auth}`;
    } else {
      opts.headers['Authorization'] = `Token ${auth}`;
    }
  }

  // If we are server-side we have to use 'include' over 'same-origin'
  if (!process.browser) {
    opts.credentials = "include";
  }

  return fetch(url, opts);
}

export function get(url) {
  return send({ method: 'GET', url});
}

export function del(url) {
  return send({ method: 'DELETE', url});
}

export function post(url, data) {
  return send({ method: 'POST', url, data });
}

export function put(url, data) {
  return send({ method: 'PUT', url, data });
}

export const parseResponse = async resp => {
  let data = await resp.text();
  try {
    data = JSON.parse(data);
  } catch(_e) {};
  return {
    status: resp.status,
    status_text: resp.statusText,
    data,
  }
}

export const formatResponse = resp => {
  let r = {
    ...resp.data
  };
  return r;
  // Override status...
  if (process.browser && resp.status == 401) {
    window.location.reload();
    return {
      status: "error",
    }
  } else if (resp.status >= 200 && resp.status < 300) {
    return {
      status: "success",
    }
  } else if (resp.status >= 400 && resp.status < 500) {
    return {
      status: "fail",
    }
  } else {
    return {
      status: "error",
    }
  }
}
